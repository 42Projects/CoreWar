/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   cw_ldi.c                                           :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: nfinkel <nfinkel@student.42.fr>            +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2018/03/14 19:10:18 by nfinkel           #+#    #+#             */
/*   Updated: 2018/03/19 12:18:06 by lfabbro          ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "corewar.h"

// TODO terminate to write

int			cw_ldi(t_proc *proc, uint8_t *opcode)
{
	uint8_t		*ocp;
	uint8_t		*ptr;
	//uint8_t		buf[4];
	uint32_t	a1;
	uint32_t	a2;
	uint8_t		reg;

	ocp = cw_move_ptr(opcode, 1);
	ptr = cw_move_ptr(opcode, 2);
	if ((*ocp & 0xc0) >> 6 == REG_CODE)
	{
		a1 = (uint32_t)g_cw->current->reg[ft_mtoi(ptr, 1)];
		ptr = cw_move_ptr(ptr, 1);
	}
	else if ((*ocp & 0xc0) >> 6 == DIR_CODE)
		a1 = cw_opcode_read(&ptr, opcode, 2, E_DIR);
	else if ((*ocp & 0xc0) >> 6 == IND_CODE)
		a1 = cw_opcode_read(&ptr, opcode, 2, E_IND_SHORT);

	if ((*ocp & 0x30) >> 4 | T_REG)
		a2 = ft_mtoi(cw_move_ptr(opcode, 1), 1);
	else if ((*ocp & 0x30) >> 4 | T_DIR)
		a2 = cw_opcode_read(&opcode, 4, 1, E_DIR);

	reg = ft_mtoi(cw_map_opcode(opcode, opcode), 1);

	g_cw->current->pc = cw_move_ptr(ptr, opcode - ptr);
	(void)proc;
	(void)opcode;
	return (YEP);
}
